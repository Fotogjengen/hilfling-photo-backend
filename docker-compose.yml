version: '3.7'

services:
  hilfling-app:
    build:
      context: .
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hilfling-app.entrypoints=web"
      - "traefik.http.services.hilfling-app.loadbalancer.server.port=8080"
    networks:
      - hilfling-network
    depends_on:
      - postgres

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=youremail@yourdomain.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:8000"
      - "--api.dashboard=true"
      - "--api.debug=true"
    networks:
      - hilfling-network
    ports:
      - "8000:8000"
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

  postgres:
    container_name: hilflingdb
    build:
      context: .
      dockerfile: postgres/Dockerfile
    restart: always
    volumes:
      - "db-data:/var/lib/postgresql/data" # Database volume
        #- "./postgres/sql:/base-sql" # Think this was init sql schema?
    expose:
      - 5432
    networks:
      - hilfling-network
    ports:
      - "5432:5432"
    environment:
      # Use env variable if exists, fallback to hilfling
      DATABASE_USERNAME: hilfling
      DATABASE_URL: jdbc:postgresql://postgres:5432/hilflingdb?createDatabaseIfNotExist=true
      DATABASE_PASSWORD: password
      DATABASE_DRIVER: org.postgresql.Driver

networks:
  hilfling-network:
    driver: bridge

volumes:
  db-data: