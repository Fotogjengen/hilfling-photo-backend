version: "2"

services:
  photo-api:
    container_name: photo-api
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start
    volumes:
      - ./src:/app/src
    ports:
      - "8000:8080"
    networks:
      - web

  postgres:
    container_name: photodb
    build:
      context: .
      dockerfile: postgres/Dockerfile
    restart: always
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./postgres/sql:/base-sql"
    ports:
      - "5431:5432"
    networks:
      - web
    environment:
      POSTGRES_PASSWORD: example

  traefik:
    image: "traefik:v2.0.0-rc3"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      traefik.enable: "true"
      traefik.backend: "traefik"
      traefik.frontend.rule: "Host:traefik.localhost:8080"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./backends.toml:/backends.toml
    networks:
            - traefik
networks:
        traefik:
                external: true


networks:
  web:
volumes:
  db-data:
