server:
  address: ${LISTENING_IP:localhost}
  port: ${LISTENING_PORT:8080}
  error:
    include-message: always
    include-stacktrace: always
    include-exception: true
    include-binding-errors: always
spring:
  datasource:
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 5
    username: ${DATABASE_USERNAME:hilfling}
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/hilflingdb?createDatabaseIfNotExist=true}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: ${DATABASE_DRIVER:org.postgresql.Driver}

  logging:
    level:
      root: debug
      me.liuwj.ktorm: debug
      org.springframework.web: DEBUG

  flyway:
    user: ${DATABASE_USERNAME:hilfling}
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/hilflingdb?createDatabaseIfNotExist=true}
    password: ${DATABASE_PASSWORD:password}
    enabled: true
    validate-on-migrate: true
    locations: classpath:/db/migration

  servlet:
    multipart:
      enabled: true # Enable multipart uploads (files)
      file-size-threshold: 2KB
      max-file-size: 50MB
      max-request-size: 60MB
  azure:
    tenant-id:
    client:
      client-id:
      client-secret:
    storage:
      storage-id:
      storage-endpoint:
      container:
      blob-storage:
        connection-string: ${AZURE_STORAGE_CONNECTION_STRING:DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;}

springdoc:
  api-docs:
    #path: "/"
    enabled: true
  swagger-ui:
    path: "/"

# Doesn't currently work?
static-files:
  img:
    saved-photos-path: "static-files/static/img"

file:
  large-upload-dir: photos/large/
  medium-upload-dir: photos/medium/
  small-upload-dir: photos/small/
#okta: # SECURITY OKTA
#  oauth2:
#    issuer: https://dev-812828.okta.com/oauth2/default
#    client-id: 0oa2lxbl9mygTznZy357
#    audience: api://default
#    groups-claim: groups
#    scopes: 'openid'

