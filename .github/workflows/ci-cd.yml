# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@0db984c1826869dcd0740ff26ff75ff543238fd9
        uses: docker/build-push-action@v2.2.1
        with:
          
          # Path to the Dockerfile
        # file: # optional, default is ./Dockerfile
          # List of build-time variables
          #uild-args: # optional
          # List of metadata for an image
          #abels: # optional
          # List of tags
          tags: # optional
            fotogjengen/hilfling-backend:latest
          # Always attempt to pull a newer version of the image
          #ull: # optional, default is false
          # Sets the target stage to build
          #arget: # optional
          # List of extra privileged entitlement (eg. network.host,security.insecure)
          # Do not use cache when building the image
          #o-cache: # optional, default is false
          # Push is a shorthand for --output=type=registry
          push: true #optional, default is false


      # Runs a set of commands using the runners shell
     # - name: Run a multi-line script
     #   run: |
     #   echo Add other actions to build,
      #    echo test, and deploy your project.
  # Tests are ran as part of the build stage
  #test:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - run: mvn test

  lint:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2           
        - name: Run ktlint with reviewdog
          # You may pin to the exact commit or the version.
          # uses: ScaCap/action-ktlint@58b3c386f5160049b0a1d0f986c56e0d0717140a
          uses: ScaCap/action-ktlint@1.3
          with:
            # GITHUB_TOKEN
            github_token: ${{ secrets.GITHUB_TOKEN }}
            # Report level for reviewdog [info,warning,error]
            level: error# optional, default is error
            # Reporter of reviewdog command [github-pr-check,github-pr-review].

            reporter: github-pr-check # optional, default is github-pr-check
            # Fails the current check if any error was found [true/false]

            fail_on_error: false # optional, default is false
            # Print files relative to the working directory
            relative: true # optional, default is true
            # Run KtLint with Android Kotlin Style Guide
